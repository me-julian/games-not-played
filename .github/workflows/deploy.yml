name: Deploy updated app to AWS

on:
  # Can be manually run or called by other workflows
  workflow_dispatch:
  workflow_call:
    inputs:
      version-tag:
        description: 'Deployment version as time string generated in build.'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      # Download app package to upload to EB
      # eb-app-package.zip extracts to games-not-played.zip
      - name: Download EB package artifact
        uses: actions/download-artifact@v4
        with:
          name: eb-app-package

      - name: Download migrations artifact
        uses: actions/download-artifact@v4
        with:
          name: migrations

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        id: get-aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          unset-current-credentials: true
          role-to-assume: arn:aws:iam::173624809884:role/GithubActionsAutomator
          aws-region: us-east-2
          output-credentials: true

      # Login to AWS ECR
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: '173624809884'
          mask-password: 'true'

      # Install Node for running Sequelize migrations
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install sequelize and sequelize-cli
        run: npm install sequelize sequelize-cli mysql2

      # Run Sequelize migrations
      - name: Extract migrations package
        run: unzip migrations.zip -d .

      - name: Run Sequelize migrations
        env:
          DATABASE_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}
          DATABASE_HOST: ${{ vars.APP_DOMAIN }}
          DATABASE_NAME: ${{ vars.MYSQL_DATABASE }}
          DATABASE_USERNAME: ${{ vars.MYSQL_USER }}
        run: |
          npx sequelize db:migrate --migrations-path ./migrations --config ./dbConfig.js --env production

      # Deploy app to EB
      - name: Deploy app to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ steps.get-aws-creds.outputs.aws-access-key-id }}
          aws_secret_key: ${{ steps.get-aws-creds.outputs.aws-secret-access-key }}
          application_name: games-not-played
          environment_name: games-not-played-env
          version_label: games-not-played-${{ inputs.version-tag }}
          region: us-east-2
          deployment_package: games-not-played.zip
          use_existing_version_if_available: 'true'
